{"version":3,"sources":["components/Nav.js","components/Text.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","React","createElement","className","Link","to","heading","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Text","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","rows","cols","value","onChange","event","target","style","backgroundColor","Mode","color","split","length","newText","toUpperCase","toLowerCase","join","txtarea","document","getElementById","select","navigator","clipboard","writeText","aria-labelledby","data-bs-parent","about","href","rel","App","setMode","Router","body","Switch","Route","path","About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.28b10974.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function Nav(props) {\r\n  \r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"Text\">\r\n          {props.heading}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/Text\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/About\">\r\n                About us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n      <div className=\"form-check form-switch\">\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n        <label className=\"form-check-label text-white\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function Text(props) {\r\n  const handleextraspace = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  const copytxt=()=>{\r\n    let txtarea = document.getElementById(\"txtarea\");\r\n    txtarea.select();\r\n    navigator.clipboard.writeText(txtarea.value);\r\n  }\r\n\r\n    function cleartxt(){\r\n        setText(\"\");\r\n\r\n    }\r\n\r\n    function changeme(event){\r\n        // console.log(\"cahnged\")\r\n        setText(event.target.value);\r\n        // console.log(text);\r\n    }\r\n\r\n    function handleupcase(){\r\n        const newText = text.toUpperCase();\r\n        setText(newText);\r\n        // console.log(\"uppercase : \" + text);\r\n    }\r\n\r\n    function handlelocase(){\r\n        const newText = text.toLowerCase();\r\n        setText(newText);\r\n        // console.log(\"lowercase : \" + text);\r\n    }\r\n\r\n    //creating state\r\n    const [text, setText] = useState(\"\");\r\n    \r\n  return (\r\n    <>\r\n      <h4 className=\"my-3\">Enter text to analyze  </h4>\r\n        <textarea className=\"form-control\" id=\"txtarea\" rows={12} cols={10} value={text} onChange={changeme} style={{backgroundColor: props.Mode===true?\"#191819\":\"white\", color: props.Mode===true?\"white\":\"black\" }} />\r\n        <div className=\"container my-1\">\r\n        <h5>\r\n            {text.split(\" \").length} words {text.length} characters\r\n        </h5>\r\n    </div>\r\n\r\n      <div className=\"container\">\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary my-2 mx-1\" onClick={handleupcase}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary my-2 mx-1\" onClick={handlelocase}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-sm  btn-primary my-2 mx-1\" onClick={handleextraspace}>\r\n          Remove extra spaces\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary my-2 mx-1\" onClick={cleartxt}>\r\n          Clear Text\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary my-2 mx-1\" onClick={copytxt}>\r\n          Copy Text\r\n        </button>\r\n      </div>\r\n\r\n<div className=\"accordion my-3\" id=\"accordionExample\" >\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button\r\n          className=\"accordion-button\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseOne\"\r\n          aria-expanded=\"true\"\r\n          aria-controls=\"collapseOne\"\r\n          style={{backgroundColor: props.Mode===true?\"#191819\":\"white\", color: props.Mode===true?\"white\":\"black\" }}\r\n        >\r\n          <h5>Preview Text :</h5>\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseOne\"\r\n        className=\"accordion-collapse collapse show\"\r\n        aria-labelledby=\"headingOne\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body\" style={{backgroundColor: props.Mode===true?\"#191819\":\"white\", color: props.Mode===true?\"white\":\"black\" }}>\r\n          <h6>{text}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    </>\r\n  );\r\n}\r\n      \r\n      \r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport default function about(props) {\r\n  return (\r\n    <>\r\n        <div className=\"my-3\">\r\n        \r\n\r\n<div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\" style={{backgroundColor: props.Mode===true?\"#282828\":\"white\", color: props.Mode===true?\"white\":\"black\" }}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button\r\n        className=\"accordion-button\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#collapseOne\"\r\n        aria-expanded=\"true\"\r\n        aria-controls=\"collapseOne\"\r\n        style={{backgroundColor: props.Mode===true?\"#282828\":\"white\", color: props.Mode===true?\"white\":\"black\" }}\r\n      >\r\n        Text UTILITIES Software Overview\r\n      </button>\r\n    </h2>\r\n    <div\r\n      id=\"collapseOne\"\r\n      className=\"accordion-collapse collapse show\"\r\n      aria-labelledby=\"headingOne\"\r\n      data-bs-parent=\"#accordionExample\"\r\n    >\r\n      <div className=\"accordion-body\">\r\n    TEXT UTILITIES is React js based single page application which has some features that helps to convert your input text into uppercase, lowercase . It removes extra spaces between two words.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div className=\"accordion-item\" style={{backgroundColor: props.Mode===true?\"#282828\":\"white\", color: props.Mode===true?\"white\":\"black\" }}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button\r\n        className=\"accordion-button collapsed\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#collapseThree\"\r\n        aria-expanded=\"false\"\r\n        aria-controls=\"collapseThree\"\r\n        style={{backgroundColor: props.Mode===true?\"#282828\":\"white\", color: props.Mode===true?\"white\":\"black\" }}\r\n      >\r\n       What are the benefits of using TEXT UTILITIES software?\r\n      </button>\r\n    </h2>\r\n    <div\r\n      id=\"collapseThree\"\r\n      className=\"accordion-collapse collapse\"\r\n      aria-labelledby=\"headingThree\"\r\n      data-bs-parent=\"#accordionExample\"\r\n    >\r\n      <div className=\"accordion-body\">\r\n       <pre> Convert your text to : UpperCase\r\n                               Lowercase\r\n                              Remove Extra Spaces between words\r\n                              Copy Text\r\n                              Preview Text\r\n             User can enable darkmode using toggle button </pre>\r\n                              \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"card text-center my-1\" style={{backgroundColor: props.Mode===true?\"#282828\":\"white\", color: props.Mode===true?\"white\":\"black\" }}>\r\n  <div className=\"card-header\">Featured By</div>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Meshv Patel</h5>\r\n    <p className=\"card-text\">\r\n   <p> Front End Developer</p>\r\n    <p>meshv1444@gmail.com</p>\r\n    <p>(+91)9408061619</p>\r\n    <p className=\"container\">\r\n    Excellent problem-solving skills\r\n    Strong knowledge of HTML, CSS, JavaScript\r\n    Experience in one (or more) of the following frameworks: AngularJS, React JS\r\n\r\n    Migrated a multi-page user experience into a single-page app which improved customer engagement by 8% using React\r\n\r\n    “Recent graduate with an LJIET in Information Technology looking to leverage my experience building responsive and scalable web apps to solve interesting problems that delight end-users.”\r\n  </p>\r\n\r\n      \r\n      \r\n    </p>\r\n    <a href=\"https://www.linkedin.com/in/meshv-patel-843539226/\"  target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary fa fa-linkedin mx-2\"></a>\r\n    <a href=\"https://github.com/meshv94/TextUtilities.git\"  target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-dark fa fa-github\"></a>\r\n    \r\n      \r\n  </div>\r\n</div>\r\n        </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport React, {useState} from \"react\";\nimport Nav from \"./components/Nav.js\"\nimport Text from \"./components/Text.js\"\nimport About from './components/About.js'\n// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [Mode, setMode] = useState(false);\n  \n  const toggleMode=()=>{\n    if(Mode===true){\n      setMode(false)\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\"\n    }\n    else{\n      setMode(true)\n      document.body.style.backgroundColor = \"black\"\n      document.body.style.color = \"white\"\n    }\n  }\n\n\n  return (\n    <>\n      <Router>\n        <Nav heading=\"Text Analyzer\" Mode={Mode} toggleMode={toggleMode}></Nav>\n        <div className='container'>\n          <Switch>\n            <Route path=\"/About\"> \n            <About Mode={Mode}></About> \n            </Route>\n            <Route path=\"/Text\"> \n            <Text Mode={Mode}/> \n            </Route>\n            <Route path=\"/\"> \n            <Text Mode={Mode}></Text> \n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n    );\n  }\n  \n  export default App;\n              \n            \n              \n\n\n      \n              \n\n\n  \n  \n        \n    \n    \n      \n          \n          \n              \n      \n      \n              \n\n    \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}